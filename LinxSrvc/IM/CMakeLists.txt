cmake_minimum_required(VERSION 2.8...3.16)

project(kaics CXX C)

set(CMAKE_CXX_STANDARD 14)
set(TARGET kaics)
set(OPTION "-fPIC -pthread")
set(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")
set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")
set(CMAKE_CXX_FLAGS "-std=c++0x ${CMAKE_CXX_FLAGS} -g -ftest-coverage -fprofile-arcs")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OPTION}")

if(NOT CMAKE_HOST_APPLE)
    set(OPTION "${OPTION} rt c")
endif()
if (NOT WIN32)
    add_definitions(-D_USE_FORK_PROCESS_)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated")
endif()

if("${ANDROID}" EQUAL "1")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}../../../jniLibs/${ANDROID_ABI})
    include_directories(kaics)
else()
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/../../lib)
    add_definitions(-DFULLY_COMPILE)
    include_directories(..)
endif()

file(GLOB SRC_FILE_LIST "Kai*[^est]*.c*")

add_library(${TARGET} SHARED ${SRC_FILE_LIST})

if("${ANDROID}" EQUAL "1")
    target_link_libraries(${TARGET} log android)
else()
    file(GLOB TEST_FILE "K*est*.c*")
    if(EXISTS ${TEST_FILE})
        if(WIN32)
            set(PROC ${TARGET}_test)
        else()
            set(PROC ${TARGET}.exe)
        endif()
        add_executable(${PROC} ${SRC_FILE_LIST} ${TEST_FILE})
    endif()
endif()

target_link_libraries(${TARGET} ${OPTION})
